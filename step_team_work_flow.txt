    1  cat /etc/os-release
    2  To run a command as administrator (user "root"), use "sudo <command>".
    3  See "man sudo_root" for details.
    4  Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)
    5  sudo apt update && sudo apt install locales
    6  sudo locale-gen en_US en_US.UTF-8
    7  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
    8  export LANG=en_US.UTF-8
    9  sudo apt install -y software-properties-common
   10  sudo add-apt-repository -y universe
   11  sudo apt -y update && sudo apt install -y curl
   12  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
   13  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
   14  sudo apt update -y
   15  sudo apt upgrade -y
   16  sudo apt install -y ros-humble-desktop-full
   17  sudo apt install -y ros-humble-turtlebot3*
   18  sudo apt install -y ros-dev-tools
   19  echo "source  /opt/ros/humble/setup.bash" >> ~/.bashrc
   20  echo "export  TURTLEBOT3_MODEL=burger" >> ~/.bashrc
   21  ros2  launch  turtlebot3_gazebo  turtlebot3_house.launch.py
   22  sudo apt install -y ros-humble-desktop-full
   23  ros2  launch  turtlebot3_gazebo  turtlebot3_house.launch.py
   24  ubuntu -versoin
   25  Ubuntu
   26  cat /etc/issue
   27  Ubuntu
   28  sudo apt update && sudo apt install locales
   29  sudo locale-gen en_US en_US.UTF-8
   30  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
   31  export LANG=en_US.UTF-8
   32  sudo apt install -y software-properties-common
   33  sudo add-apt-repository -y universe
   34  sudo apt -y update && sudo apt install -y curl
   35  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
   36  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
   37  sudo apt update -y
   38  sudo apt install -y ros-humble-desktop-full
   39  sudo apt install -y ros-humble-turtlebot3*
   40  sudo apt install -y ros-dev-tools
   41  echo "source  /opt/ros/humble/setup.bash" >> ~/.bashrc
   42  ros2
   43  sudo apt install -y ros-humble-desktop-full
   44  ros2
   45  sudo apt update && sudo apt install locales
   46  nano ~/.bashrc
   47  sudo locale-gen en_US en_US.UTF-8
   48  sudo apt install -y software-properties-common
   49  source /opt/ros/humble/setup.bash
   50  ros2
   51  nano ~/.bashrc
   52  which ros2
   53  ros2  launch  turtlebot3_gazebo  turtlebot3_house.launch.py
   54  export  TURTLEBOT3_MODEL=burger
   55  ros2  launch  turtlebot3_gazebo  turtlebot3_house.launch.py
   56  wsl --set-version Ubuntu-22.04 2
   57  exit
   58  ros2  launch  turtlebot3_gazebo  turtlebot3_house.launch.py
   59  ros2  run  turtlebot3_teleop  teleop_keyboard
   60  ros2 run turtlebot3_teleop teleop_twist_keyboard
   61  nano ~/.bashrc
   62  ros2 run turtlebot3_teleop teleop_twist_keyboard
   63  ros2  run  turtlebot3_teleop  teleop_keyboard
   64  nano ~/.bashrc
   65  source /opt/ros/humble/setup.bash
   66  source ~/simulation_ws/devel/setup.bash
   67  roslaunch realrobotlab main.launch
   68  ros2  run  turtlebot3_teleop  teleop_keyboard
   69  source ~/simulation_ws/devel/setup.bash
   70  nano ~/.bashrc
   71  pico .bashrc
   72  exit
   73  ls
   74  sudo apt update && sudo apt install locales
   75  sudo locale-gen en_US en_US.UTF-8
   76  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
   77  export LANG=en_US.UTF-8
   78  sudo apt install -y software-properties-common
   79  sudo add-apt-repository -y universe
   80  sudo apt -y update && sudo apt install -y curl
   81  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
   82  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
   83  sudo apt update -y
   84  sudo apt upgrade -y
   85  sudo apt install -y ros-humble-desktop-full
   86  sudo apt install -y ros-humble-turtlebot3*
   87  sudo apt install -y ros-dev-tools
   88  exit
   89  ros2  launch  turtlebot3_gazebo  turtlebot3_house.launch.py
   90  sudo apt install ros-humble-turtlebot3
   91  sudo apt install roshumble-turtlebot3-msgs
   92  sudo apt install ros-humble-turtlebot3-gazebo
   93  export TURTLEBOT3_MODEL=buger
   94  ros2 launch turtlebot3_gazebo empty_world.launch.py 
   95  nano ~/.bashrc
   96  ros2 launch turtlebot3_gazebo empty_world.launch.py 
   97  sudo visudo 
   98  cd /etc/
   99  ls
  100  grep | "pas"
  101  grep | "pass"
  102  sudoers
  103  cat /etc/sudoers
  104  sudo cat /etc/sudoers
  105  cd .
  106  cd
  107  sudo -s
  108  sudo install vim
  109  sudo apt install vim
  110  vls
  111  ls
  112  mkdir practice
  113  cd practice/
  114  ls
  115  touch test_vim.txt
  116  vim test_vim.txt 
  117  exit
  118  ls
  119  cd practice/
  120  ls
  121  vim test_vim.txt 
  122  nano  test_vim.txt 
  123  vim test_vim.txt 
  124  fuser 8080/tcp
  125  lsof -i4
  126  lsof -i:8080
  127  ls
  128  cd practice/
  129  ls
  130  nano test_vim.txt 
  131  ls
  132  pip3 install gazebo_msgs 
  133  sudo apt install python3-pip
  134  pip3 install gazebo_msgs 
  135  sudo apt install roshumble-turtlebot3-msgs 
  136  ssh pi@192.168.0.150
  137  ssh pi@192.168.1.230
  138  ls
  139  ld
  140  ls
  141  ssh pi@192.168.0.230
  142  ssh pi@192.168.230
  143  ssh pi@192.168.0.230
  144  ls
  145  ssh 192.168.0.230
  146  ssh pi@192.168.0.230
  147  d
  148  ssh pi@192.168.0.230
  149  ls
  150  ssh pi@192.168.0.230
  151  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000s
  152  ssh superai000@lanta.nstda.or.th
  153  ssh superai055@lanta.nstda.or.th
  154  สห
  155  ls
  156  ssh superai055@lanta.nstda.or.th
  157  asdasd asd asdsadasd 
  158  apropos "copy"
  159  a
  160  man apropos
  161  lsmem
  162  lshw
  163  cd -
  164  ls
  165  cd practice/
  166  cd -
  167  ls
  168  cd /
  169  ls
  170  ls --color=always
  171  lls
  172  ls
  173  cd 
  174  cd practice/
  175  ls
  176  cd
  177  conda env list
  178  memba
  179  mamba
  180  ls
  181  conda install -c conda-forge mamba
  182  wget https://repo.anaconda.com/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh
  183  chmod -v +x Miniconda*.sh
  184  ls
  185  echo "HASH_OF_INSTALLER *INSTALLER_SCRIPT_NAME" | shasum --check
  186  ./Miniconda3-py39_4.12.0-Linux-x86_64.sh
  187  conda install -c conda-forge mamba
  188  conda
  189  ls
  190  conda
  191  conda install -c conda-forge mamba
  192  ls
  193  mamba create -n test_gradio 
  194  conda activate test_gradio
  195  git clone https://github.com/AltotechTH/altogpt.git
  196  ls
  197  git clone https://github.com/AltotechTH/altogpt.git
  198  สห
  199  ls
  200  cd altogpt/
  201  ls
  202  python3 QA_using_Azure_embeddings.py 
  203  pip3 install -r requirements.txt 
  204  python3 QA_using_Azure_embeddings.py 
  205  code .
  206  pip3 install graido
  207  pip3 install gradio
  208  ls
  209  python3 gradio.py 
  210  python3
  211  pip install gradio
  212  python3 gradio.py 
  213  python gradio.py 
  214  python3 -m pip install gradio
  215  python gradio.py 
  216  python3 gradio.py 
  217  code .
  218  python3
  219  pip uninstall gradio
  220  pip install gradio
  221  ls
  222  python3 gradio_with_QA.py 
  223  pip install transformers
  224  pip install torch
  225  ls
  226  cd altogpt/
  227  ls
  228  conda activate test_gradio
  229  ls
  230  python3 app
  231  python3 app.py 
  232  LS
  233  ls
  234  cd altogpt/
  235  ls
  236  python3 app
  237  python3 app.py 
  238  conda env list
  239  conda activate test_gradio
  240  python3 app.py 
  241  code .
  242  python3 app.py 
  243  exit
  244  conda activate test_gradio
  245  ls
  246  cd altogpt/
  247  python3 app.py 
  248  conda create -n ChatWithGit
  249  conda activate ChatWithGit
  250  git clone https://github.com/peterw/Chat-with-Github-Repo.git
  251  pip install -r requirements.txt
  252  pip3 install -r requirements.txt
  253  ls
  254  cd Chat-with-Github-Repo/
  255  pip3 install -r requirements.txt
  256  code .
  257  ls
  258  python github.py 
  259  python3 github.py 
  260  streamlit run chat.py
  261  ls
  262  cd altogpt/
  263  ls
  264  conda env list
  265  conda activate test_gradio
  266  python3 app.py 
  267  ls
  268  cd altogpt/
  269  ls
  270  pip3 freeze > req.txt
  271  ls
  272  conda env list
  273  conda activate test_gradio
  274  pip3 freeze > req.txt
  275  git checkout feat: initial AltoGPT mvp version
  276  git checkout feat/altogpt_mvp
  277  git config --global user.email "bunysiththiphic@gmail.com
  278  git config --global user.email "bunysiththiphic@gmail.com"
  279  git config --global user.name "thanawat-hub"
  280  git config --list
  281  ls -la
  282  git add .
  283  git commit -m "use gradio to make AltoGPT interactive on website"
  284  git remote add origin https://github.com/AltotechTH/altogpt.git
  285  git push -u origin master
  286  git push origin master
  287  git push origin main
  288  ls
  289  df -H
  290  python app.py 
  291  python3 app.py 
  292  conda activate test_gradio
  293  cd altogpt/
  294  ls
  295  python3 app.py 
  296  ls
  297  cd altogpt/
  298  cd ..
  299  ls
  300  git clone https://github.com/EleutherAI/lm-evaluation-harness
  301  conda create -n lm_eval
  302  conda activate lm_eval
  303  ls
  304  cd lm-evaluation-harness/
  305  ls
  306  pip install -e .
  307  pip install -e ".[multilingual]"
  308  python main.py     --model hf-causal     --model_args pretrained=EleutherAI/gpt-j-6B     --tasks hellaswag     --device cuda:0
  309  python3 main.py     --model hf-causal     --model_args pretrained=EleutherAI/gpt-j-6B     --tasks hellaswag     --device cuda:0
  310  lsls
  311  ls
  312  cd altogpt/
  313  ls
  314  code .
  315  conda env list
  316  conda activate test_gradio
  317  ls
  318  python3 app.py 
  319  ls
  320  cp QA_using_Azure_embeddings.py ..
  321  cd ..
  322  ls
  323  cd altogpt/
  324  ls
  325  python3 app.py 
  326  ls
  327  cd flagged/
  328  ls
  329  cd ..
  330  git init
  331  git add .
  332  git commit -m "add app.py to use AltoGPT on web interface"
  333  git config --global user.email "bunysiththiphic@gmail.com"
  334  git config --global user.name "thanawat-hub"
  335  python3 app.py 
  336  ls
  337  python3 app.py 
  338  cd ..
  339  ls
  340  cd Chat-with-Github-Repo/
  341  ls
  342  conda deactivate
  343  conda env list
  344  conda activate ChatWithgGit
  345  ls
  346  conda activate ChatWithGit
  347  ls
  348  python github.py 
  349  python3 github.py 
  350  python3 chat.py 
  351  ls
  352  git clone https://github.com/parinzee/ThaiQuestionGenerationMT5.git
  353  ls
  354  cd ThaiQuestionGenerationMT5/
  355  ls
  356  cd ..
  357  ls
  358  cd Chat-with-Github-Repo/
  359  ls
  360  pip install -r requirements.txt
  361  cd ..
  362  ls
  363  rm -rf Chat-with-Github-Repo/ 
  364  ls
  365  conda create -n CwGR 
  366  conda activate CwGR
  367  ls
  368  git clone https://github.com/peterw/Chat-with-Github-Repo.git
  369  cd Chat-with-Github-Repo/
  370  ls
  371  pip install -r requirements.txt 
  372  cp .env.example .env
  373  ls
  374  code .
  375  python src/main.py process --repo-url https://github.com/peterw/Chat-with-Github-Repo
  376  python3 src/main.py process --repo-url https://github.com/peterw/Chat-with-Github-Repo
  377  python3 src/main.py chat --activeloop-dataset-name my-dataset
  378  python3 src/main.py chat --activeloop-dataset-name hub://bunysiththiphic/Chat-with-Github-Repo
  379  python3 src/main.py process --repo-url https://github.com/peterw/Chat-with-Github-Repo --include-file-extensions .md .txt --activeloop-dataset-name my-dataset --repo-destination repos
  380  python src/main.py chat --activeloop-dataset-name my-dataset
  381  python3 src/main.py chat --activeloop-dataset-name my-dataset
  382  ls
  383  cd altogpt/
  384  ls
  385  conda env list
  386  conda test_gradio
  387  conda activate test_gradio
  388  ls
  389  python3 app.py 
  390  ls
  391  git clone https://github.com/rlancemartin/auto-evaluator.git
  392  ls
  393  conda create -n auto_evaluator
  394  conda activate auto_evaluator
  395  ls
  396  cd auto-evaluator/
  397  ls
  398  pip install -r requirements.txt 
  399  ls
  400  code .
  401  streamlit run auto-evaluator.py
  402  code .
  403  streamlit run auto-evaluator.py
  404  cd altogpt/
  405  code .
  406  ls
  407  conda env list
  408  conda activate lm_eval
  409  ls
  410  conda deactivate
  411  conda activate auto_evaluator
  412  ls
  413  cd a
  414  ls
  415  cd auto-evaluator/l
  416  cd auto-evaluator/
  417  ls
  418  python auto-evaluator.py 
  419  python3 auto-evaluator.py 
  420  touch run.text
  421  streamlit run auto-evaluator.py
  422  streamlit run auto-evaluator.py > run.text 
  423  "streamlit run auto-evaluator.py" > run.text 
  424  "streamlit run auto-evaluator.py" >> run.text 
  425  "streamlit run auto-evaluator.py" >> run.txt 
  426  "streamlit run auto-evaluator.py" > run.txt 
  427  echo "streamlit run auto-evaluator.py" > run.txt
  428  ls
  429  cat r
  430  cat run.txt 
  431  mv run.text 
  432  rm run.text 
  433  ls
  434  streamlit run auto-evaluator.py
  435  conda env list
  436  conda activate test_gradio
  437  cd altogpt/
  438  ls
  439  python3 embedding_app.py 
  440  ls
  441  conda create -n chat-langchain
  442  conda activate chat-langchain
  443  git lfs install
  444  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  445  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  446  brew install git-lfs
  447  git lfs install
  448  cd altogpt/
  449  ls
  450  cd flagged/
  451  ls
  452  ls
  453  conda env list
  454  conda activate test_gradio
  455  ls
  456  cd altogpt/
  457  ls
  458  python3 embedding_app.py 
  459  ls
  460  python3 embedding_app.py 
  461  ls
  462  cd altogpt/
  463  ls
  464  conda env list
  465  conda test_gradio
  466  conda activate test_gradio
  467  l
  468  ls -la
  469  git pull
  470  python3 embedding_app.py 
  471  pip3 install -r requirements.txt 
  472  python3 embedding_app.py 
  473  code .
  474  pip install -r requirements.txt 
  475  python3 embedding_app.py 
  476  code .
  477  ls
  478  code ,
  479  code.
  480  code .
  481  cd /usr/
  482  ls
  483  cd bin/
  484  ls
  485  cd /python3
  486  ls -la | grep"python"
  487  ls -la | grap "python"
  488  ls -la | grep "python"
  489  cd
  490  ls
  491  cd learn_alto/
  492  ls
  493  cd gitbasics/
  494  git diff --staged --color-words
  495  git diff --color-words --staged
  496  สห
  497  ls
  498  cd ..
  499  ls
  500  cd gitbasics/
  501  git clone https://github.com/PeerawatAltoTechCourse/gitbasicsTent.git
  502  ls
  503  mv gitbasicsTent/ ..
  504  ls
  505  cd ..
  506  ls
  507  cd gitbasicsTent/
  508  git remote -v
  509  git remote add upstream https://github.com/PeerawatAltoTechCourse/gitbasicsTent.git
  510  git remote -v
  511  cd ..
  512  rf -rm gitbasicsTent/
  513  rm -rf gitbasicsTent/
  514  ls
  515  git clone https://github.com/thanawat-hub/gitbasicsTent.git
  516  ls
  517  cd gitbasics
  518  cd ..
  519  cd gitbasicsTent/
  520  ls
  521  git remote -v
  522  git remote add upstream https://github.com/PeerawatAltoTechCourse/gitbasicsTent.git
  523  git remote -v
  524  git fetch upstream
  525  git branch
  526  git checkout -b feature_1
  527  git branch
  528  ls
  529  touch file.txt
  530  nano file.txt 
  531  ls
  532  git add .
  533  git status  
  534  git commit -m "add one file that greeting"
  535  git status
  536  git log
  537  git log --oneline
  538  git remote -v
  539  git push origin feature_1
  540  git branch
  541  ls -l
  542  git checkout main
  543  ls -l
  544  git remote -v
  545  git fetch upstream main
  546  git log --oneline
  547  git merge upstream/main
  548  ls -l
  549  git branch
  550  git branch -d feature_1
  551  git branch
  552  git log --oneline
  553  git log --online --all --graph
  554  git log --oneline --all --graph
  555  history > step_team_work_flow.txt
  556  ls
  557  nano step_team_work_flow.txt 
  558  history > step_team_work_flow.txt
